      <Modal
        isOpen={showDetailModal}
        onClose={() => {
          setShowDetailModal(false)
          setSelectedRegisterDetail(null)
          if (currentRegister) fetchTransactions(currentRegister._id)
        }}
        title="Kasa Detayları"
        icon={<Eye className="w-6 h-6 text-blue-400" />}
        size="lg"
      >
        <ModalBody>
          <div className="space-y-4 max-h-[500px] overflow-y-auto">
            {transactions.map((transaction) => (
              <div key={transaction._id} className="glass p-4 rounded-xl flex items-center justify-between">
                <div className="flex items-center gap-3">
                  {transaction.type === 'giris' ? (
                    <div className="w-10 h-10 rounded-full bg-green-500/20 flex items-center justify-center">
                      <TrendingUp className="w-5 h-5 text-green-400" />
                    </div>
                  ) : (
                    <div className="w-10 h-10 rounded-full bg-red-500/20 flex items-center justify-center">
                      <TrendingDown className="w-5 h-5 text-red-400" />
                    </div>
                  )}
                  <div>
                    <p className="font-medium">{getCategoryLabel(transaction.category)}</p>
                    <p className="text-sm text-gray-400">{transaction.description || 'Açıklama yok'}</p>
                    <p className="text-xs text-gray-500 mt-1">
                      {format(new Date(transaction.createdAt), 'dd MMM yyyy HH:mm', { locale: tr })}
                    </p>
                  </div>
                </div>
                <div className={`text-lg font-bold ${transaction.type === 'giris' ? 'text-green-400' : 'text-red-400'}`}>
                  {transaction.type === 'giris' ? '+' : '-'}₺{transaction.amount.toFixed(2)}
                </div>
              </div>
            ))}
          </div>
        </ModalBody>
      </Modal>

      <Modal
        isOpen={showClearModal}
        onClose={resetClearModals}
        title="Kasa Geçmişini Sil"
        description="Tüm kasa kayıtları kalıcı olarak silinecektir"
        icon={<Trash2 className="w-6 h-6 text-red-400" />}
        size="sm"
      >
        <form onSubmit={handleClearPasswordSubmit}>
          <ModalBody>
            <div>
              <label className="block text-sm font-medium text-gray-400 mb-2">Admin Şifresi</label>
              <input
                type="password"
                value={clearPassword}
                onChange={(e) => setClearPassword(e.target.value)}
                className="input-glass w-full"
                placeholder="Şifreyi girin"
                required
                autoFocus
              />
              {clearError && <p className="text-red-400 text-sm mt-2">{clearError}</p>}
            </div>
          </ModalBody>

          <ModalFooter>
            <button
              type="button"
              onClick={resetClearModals}
              className="glass-button btn-secondary flex-1"
            >
              İptal
            </button>
            <button
              type="submit"
              className="glass-button btn-primary flex-1"
            >
              Devam Et
            </button>
          </ModalFooter>
        </form>
      </Modal>

      <Modal
        isOpen={showClearConfirmModal}
        onClose={resetClearModals}
        title="Son Uyarı!"
        description="Bu işlem geri alınamaz"
        icon={<Trash2 className="w-6 h-6 text-red-400" />}
        size="sm"
      >
        <ModalBody>
          <div className="space-y-3">
            <p className="text-gray-300">Tüm kasa geçmişi kalıcı olarak silinecek:</p>
            <ul className="list-disc list-inside text-gray-400 space-y-1">
              <li>Tüm kasa kayıtları</li>
              <li>Tüm nakit işlemleri</li>
              <li>Tüm giriş/çıkış hareketleri</li>
              <li>Tüm günlük kasa raporları</li>
            </ul>
            <div className="glass-card border border-red-500/30 p-4 rounded-xl">
              <p className="text-red-400 font-bold text-center">Bu işlem geri alınamaz!</p>
            </div>
          </div>
        </ModalBody>

        <ModalFooter>
          <button
            onClick={resetClearModals}
            disabled={isClearning}
            className="glass-button btn-secondary flex-1"
          >
            İptal
          </button>
          <button
            onClick={handleClearHistory}
            disabled={isClearning}
            className="glass-button bg-red-500/10 border-red-500/30 text-red-400 hover:bg-red-500/20 flex-1 disabled:opacity-50"
          >
            {isClearning ? (
              <div className="flex items-center justify-center gap-2">
                <div className="w-4 h-4 border-2 border-red-400 border-t-transparent rounded-full animate-spin" />
                Siliniyor...
              </div>
            ) : (
              'Tüm Geçmişi Sil'
            )}
          </button>
        </ModalFooter>
      </Modal>
    </div>
  )
}
